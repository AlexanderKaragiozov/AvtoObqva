# Generated by Django 5.2.3 on 2025-07-08 20:10

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BoatListing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('make', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('year', models.PositiveIntegerField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='listings_images/')),
                ('views', models.PositiveIntegerField(default=0)),
                ('category', models.CharField(choices=[('Платноходка', 'Платноходка'), ('Моторна лодка', 'Моторна лодка'), ('Яхта', 'Яхта'), ('Рибарска лодка', 'Рибарска лодка'), ('Надуваема лодка', 'Надуваема лодка'), ('Скутер', 'Скутер'), ('Други', 'Други')], default='other', max_length=50)),
                ('length', models.DecimalField(decimal_places=2, help_text='Дължина в метри', max_digits=5)),
                ('engine_type', models.CharField(blank=True, choices=[('Бензинова', 'Бензинова'), ('Дизелова', 'Дизелова'), ('Бензинова/Газ', 'Бензинова/Газ'), ('Хибридна', 'Хибридна'), ('Електрическа', 'Електрическа')], max_length=100, null=True)),
                ('horsepower', models.PositiveIntegerField(blank=True, help_text='Мощност в к.с.', null=True)),
                ('material', models.CharField(blank=True, max_length=100, null=True)),
                ('capacity', models.PositiveIntegerField(blank=True, help_text='Капацитет на пътници', null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boat_listings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CarListing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('make', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('year', models.PositiveIntegerField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='listings_images/')),
                ('views', models.PositiveIntegerField(default=0)),
                ('model', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('', 'Избери...'), ('Седан', 'Седан'), ('Хечбек', 'Хечбек'), ('SUV', 'SUV'), ('Купе', 'Купе'), ('Кабриолет', 'Кабриолет'), ('Комби', 'Комби'), ('Ван', 'Ван'), ('Пикап', 'Пикап'), ('Други', 'Други')], max_length=100)),
                ('kilometers', models.PositiveIntegerField()),
                ('fuel_type', models.CharField(choices=[('', 'Избери...'), ('Бензинова', 'Бензинова'), ('Дизелова', 'Дизелова'), ('Бензинова/Газ', 'Бензинова/Газ'), ('Хибридна', 'Хибридна'), ('Електрическа', 'Електрическа')], max_length=100)),
                ('transmission', models.CharField(choices=[('', 'Избери...'), ('Ръчна', 'Ръчна'), ('Автоматична', 'Автоматична'), ('Полуавтоматична', 'Полуавтоматична')], max_length=100)),
                ('horsepower', models.PositiveIntegerField()),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='car_listings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MotoListing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('make', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('year', models.PositiveIntegerField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='listings_images/')),
                ('views', models.PositiveIntegerField(default=0)),
                ('category', models.CharField(choices=[('Спортен', 'Спортен'), ('Нейкед', 'Нейкед'), ('Туристически', 'Туристически'), ('Круизър', 'Круизър'), ('Скутер', 'Скутер'), ('Ендуро', 'Ендуро'), ('Крос', 'Крос'), ('ATV / Бъги', 'ATV / Бъги'), ('Други', 'Други')], max_length=50)),
                ('engine_size', models.PositiveIntegerField(help_text='в куб. см (cc)')),
                ('engine_type', models.CharField(choices=[('2-stroke', '2 тактов'), ('4-stroke', '4 тактов'), ('electric', 'Електрически')], max_length=20)),
                ('fuel_type', models.CharField(choices=[('Бензинова', 'Бензинова'), ('Дизелова', 'Дизелова'), ('Бензинова/Газ', 'Бензинова/Газ'), ('Хибридна', 'Хибридна'), ('Електрическа', 'Електрическа')], max_length=20)),
                ('transmission', models.CharField(choices=[('manual', 'Ръчна'), ('automatic', 'Автоматична')], max_length=20)),
                ('kilometers', models.PositiveIntegerField(blank=True, help_text='в километри', null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moto_listings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
